dist: trusty
sudo: required

jobs:
  include:
    - stage: "Build docker image"
      services:
        - docker
      env:
        - BUILD_ID=${TRAVIS_BRANCH}-${TRAVIS_COMMIT:0:7}-${TRAVIS_BUILD_NUMBER}
      before_install:
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update && sudo apt-get -y install docker-ce
      script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - make docker-build
        - docker images
        - TAG_ID=`echo ${BUILD_ID} | tr -dc a-zA-Z0-9-._`
        - docker tag docker-robot-framework:latest jfxs/robot-framework:${TAG_ID}
        - docker push jfxs/robot-framework:${TAG_ID}

    - stage: "Robot Framework tests"
      services:
        - docker
      env:
        - BUILD_ID=${TRAVIS_BRANCH}-${TRAVIS_COMMIT:0:7}-${TRAVIS_BUILD_NUMBER}
      before_install:
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update && sudo apt-get -y install docker-ce
      script:
        - TAG_ID=`echo ${BUILD_ID} | tr -dc a-zA-Z0-9-._`
        - make tests-remote image=jfxs/robot-framework:${TAG_ID} url=${GRID_URL}

    - stage: "Release"
      language: node_js
      node_js: 8
      env:
        - BUILD_ID=${TRAVIS_BRANCH}-${TRAVIS_COMMIT:0:7}-${TRAVIS_BUILD_NUMBER}
      before_install:
        - sudo apt-key adv --fetch-keys http://dl.yarnpkg.com/debian/pubkey.gpg
        - echo "deb http://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
        - sudo apt-get update -qq && sudo apt-get install -y -qq yarn
        - sudo rm /usr/local/bin/yarn
      script:
        - TAG_ID=`echo ${BUILD_ID} | tr -dc a-zA-Z0-9-._`
#        - echo "export TAG_ID=${TAG_ID}" > env-tag.sh
#        - source env-tag.sh
        - docker pull jfxs/robot-framework:${TAG_ID}
        - npx semantic-release
      if: branch = master AND type = push AND fork = false
